{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\n\r\nconst myForm = document.querySelector(\".form\");\r\nconst myDelay = document.querySelector('input[name=\"delay\"]');\r\n\r\nmyForm.addEventListener(\"submit\", createPromise);\r\n\r\nfunction createPromise(event) {\r\n  event.preventDefault();\r\n  const delay = Number(myDelay.value);\r\n  const isFulfilled = myForm.elements.state;\r\n  const promiseState = isFulfilled.value;\r\n  // console.log(promiseState);\r\n\r\n  myForm.reset();\r\n  let myBestPromise = new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (promiseState === \"fulfilled\") {\r\n        resolve(delay);\r\n      } else {\r\n        reject(delay);\r\n      }\r\n    }, delay);\r\n  });\r\n  myBestPromise\r\n    .then((result) => {\r\n      iziToast.success({\r\n        message: `✅ Fulfilled promise in ${result}ms`,\r\n        position: \"topRight\",\r\n        progressBar: false,\r\n        icon: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      iziToast.error({\r\n        message: `❌ Rejected promise in ${error}ms`,\r\n        position: \"topRight\",\r\n        progressBar: false,\r\n        icon: false,\r\n      });\r\n    });\r\n}\r\n"],"names":["myForm","myDelay","createPromise","event","delay","promiseState","resolve","reject","result","iziToast","error"],"mappings":"oGAGA,MAAMA,EAAS,SAAS,cAAc,OAAO,EACvCC,EAAU,SAAS,cAAc,qBAAqB,EAE5DD,EAAO,iBAAiB,SAAUE,CAAa,EAE/C,SAASA,EAAcC,EAAO,CAC5BA,EAAM,eAAc,EACpB,MAAMC,EAAQ,OAAOH,EAAQ,KAAK,EAE5BI,EADcL,EAAO,SAAS,MACH,MAGjCA,EAAO,MAAK,EACQ,IAAI,QAAQ,CAACM,EAASC,IAAW,CACnD,WAAW,IAAM,CACXF,IAAiB,YACnBC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEpB,EAAOA,CAAK,CACZ,CAAG,EAEE,KAAMI,GAAW,CAChBC,EAAS,QAAQ,CACf,QAAS,0BAA0BD,CAAM,KACzC,SAAU,WACV,YAAa,GACb,KAAM,EACd,CAAO,CACP,CAAK,EACA,MAAOE,GAAU,CAChBD,EAAS,MAAM,CACb,QAAS,yBAAyBC,CAAK,KACvC,SAAU,WACV,YAAa,GACb,KAAM,EACd,CAAO,CACP,CAAK,CACL"}